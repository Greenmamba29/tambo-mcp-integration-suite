name: ABACUS Integration & Auto Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      abacus_changes:
        description: 'Changes made by ABACUS'
        required: false
        default: 'Component updates'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests (if any)
      run: npm run test --if-present
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        
  notify-deployment:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify ABACUS of deployment
      run: |
        echo "üöÄ Deployment triggered by: ${{ github.actor }}"
        echo "üìã Commit message: ${{ github.event.head_commit.message }}"
        echo "üîó Vercel will auto-deploy to: https://filesinasnap.com"
        
        # Optional: Send webhook to ABACUS
        if [[ "${{ secrets.ABACUS_WEBHOOK_URL }}" != "" ]]; then
          curl -X POST ${{ secrets.ABACUS_WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            -d '{
              "event": "deployment_started",
              "repository": "${{ github.repository }}",
              "commit": "${{ github.sha }}",
              "message": "${{ github.event.head_commit.message }}",
              "author": "${{ github.actor }}"
            }'
        fi
        
  validate-abacus-integration:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate ABACUS configuration
      run: |
        echo "üîç Checking ABACUS configuration..."
        
        # Check if ABACUS config exists
        if [[ -f ".abacus.donotdelete" ]]; then
          echo "‚úÖ ABACUS configuration found"
        else
          echo "‚ö†Ô∏è ABACUS configuration missing"
        fi
        
        # Check ABACUS client integration
        if [[ -f "src/services/abacusClient.ts" ]]; then
          echo "‚úÖ ABACUS client integration found"
        else
          echo "‚ö†Ô∏è ABACUS client missing"
        fi
        
        # Validate environment variables structure
        if [[ -f ".env.production" ]]; then
          echo "‚úÖ Production environment configuration found"
        else
          echo "‚ö†Ô∏è Production environment configuration missing"
        fi
        
    - name: Test ABACUS endpoints
      run: |
        echo "üîó Testing ABACUS connectivity..."
        
        # Test ABACUS API endpoint (non-authenticated ping)
        ABACUS_URL="https://apps.abacus.ai/chatllm"
        
        if curl -s -o /dev/null -w "%{http_code}" "$ABACUS_URL" | grep -q "200\|302\|403"; then
          echo "‚úÖ ABACUS endpoint accessible"
        else
          echo "‚ö†Ô∏è ABACUS endpoint check failed (may be normal if auth required)"
        fi
